// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: vague_stock_search.sql

package database

import (
	"context"
)

const vagueStockSearch = `-- name: VagueStockSearch :many

SELECT id, stockname, amount, qty_type, price_per FROM stock 
WHERE stockname LIKE $1
`

func (q *Queries) VagueStockSearch(ctx context.Context, stockname string) ([]Stock, error) {
	rows, err := q.db.QueryContext(ctx, vagueStockSearch, stockname)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Stock
	for rows.Next() {
		var i Stock
		if err := rows.Scan(
			&i.ID,
			&i.Stockname,
			&i.Amount,
			&i.QtyType,
			&i.PricePer,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
