// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: return_invoice_lines.sql

package database

import (
	"context"
)

const getInvoiceLines = `-- name: GetInvoiceLines :many

SELECT  stockname, amount, qty_type, price_per, total_price, TO_CHAR(created_at, 'DD-MM-YYYY'), user_name FROM invoice
`

type GetInvoiceLinesRow struct {
	Stockname  string
	Amount     int32
	QtyType    string
	PricePer   float64
	TotalPrice float64
	ToChar     string
	UserName   string
}

func (q *Queries) GetInvoiceLines(ctx context.Context) ([]GetInvoiceLinesRow, error) {
	rows, err := q.db.QueryContext(ctx, getInvoiceLines)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetInvoiceLinesRow
	for rows.Next() {
		var i GetInvoiceLinesRow
		if err := rows.Scan(
			&i.Stockname,
			&i.Amount,
			&i.QtyType,
			&i.PricePer,
			&i.TotalPrice,
			&i.ToChar,
			&i.UserName,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
